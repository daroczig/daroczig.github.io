q()
readLines
translate
translate
translation_read
translation_readtranslations_generate
translations_generate
testthat::test_package
generate_input(type = 'PATID')
generate_input(type = 'MODEL',
    labels = c(
      translatable('Goti et al. (2018) - Patients NOT undergoing hemodialysis'),
      translatable('Goti et al. (2018) - Patients undergoing hemodialysis'),
      translatable('Buelga et al. (2005) - Patients with hematological malignancies'),
      translatable('Buelga et al. (2005) - AML patients, Model 1'),
      translatable('Buelga et al. (2005) - AML patients, Model 2')),
    default = 'Goti et al. (2018) - Patients NOT undergoing hemodialysis')
generate_input(type = 'GENDER')
checkmate::assert_factor
generate_input(type = \'MODEL\')
generate_input(type = 'MODEL')
q(save='ask')
c
history
history()
packageVersion
packageVersion('slackr')
history()
log_appender(appender_slack())
version
as.version
?packageVersion
version
?version
compareVersion
compareVersion('1.2.2', '1.2.3')
compareVersion('2.2.2', '1.2.3')
compareVersion('2.2.2', '1.2.3')
compareVersion('2.2.2', '2.2.2')
compareVersion('1.2.2', '2.2.2')
appender_slack()
appender_slack()
pkg <- 'slackr'
min_version <- '3.1.3'
compareVersion(min_version, as.character(packageVersion(pkg)))
min_version <- '2.0.3'
compareVersion(min_version, as.character(packageVersion(pkg)))
appender_slack()
appender_slack()
CONSTANTS
CONSTANTS$drugs
names(CONSTANTS$drugs)
sort(names(CONSTANTS$drugs))
paste(sort(names(CONSTANTS$drugs)), collapse= ', ')
?gettexf
?gettexf
?gettextf
hist(c(1,1,1,1 + 1e-15, 2), breaks='FD')
hist(c(1,1,1,1, 2), breaks='FD')
pretty(range(c(1,1,1,1 + 1e-15, 2)))
sessionInfo()
stats:::quantile.default
pretty
?retty
?pretty
nclass.FD
ggplot::geom_poi
ggplot2::geom_point
q()
